// Generated by CoffeeScript 1.9.3
var IEVMLauncher, fn, i, iectrl, len, name, ref;

iectrl = require('iectrl');

IEVMLauncher = (function() {
  function IEVMLauncher(name1, id1) {
    this.name = name1;
    this.id = id1;
    this.vm = iectrl.IEVM.find(this.name)[0];
    this.wasRunning = false;
    this.captured = false;
  }

  IEVMLauncher.prototype.start = function(url) {
    var vmUrl;
    vmUrl = (url + "?id=" + this.id).replace('localhost', iectrl.IEVM.hostIp);
    return this.vm.running().then((function(_this) {
      return function(running) {
        _this.wasRunning = running;
        if (running) {
          return _this.vm.open(vmUrl);
        }
        return _this.vm.start(true).then(function() {
          return _this.vm.open(vmUrl);
        });
      };
    })(this));
  };

  IEVMLauncher.prototype.kill = function(done) {
    return this.vm.close().then((function(_this) {
      return function() {
        if (_this.wasRunning) {
          return done();
        }
        return _this.vm.stop().then(done)["catch"](done);
      };
    })(this))["catch"](done);
  };

  IEVMLauncher.prototype.markCaptured = function() {
    return this.captured = true;
  };

  IEVMLauncher.prototype.isCaptured = function() {
    return this.captured;
  };

  return IEVMLauncher;

})();

ref = iectrl.IEVM.names;
fn = function(name) {
  return exports["launcher:" + name] = [
    'type', function(id) {
      return new IEVMLauncher(name, id);
    }
  ];
};
for (i = 0, len = ref.length; i < len; i++) {
  name = ref[i];
  fn(name);
}
